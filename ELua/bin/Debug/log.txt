[source]
function fab(n)
if n <= 1 then
return n
else
return n + fab(n - 1)
end
end
print(fab(10000))

[extract]
function fab(n)
local ~16 = n <= 1
if ~16 then
return n
else
local ~17 = n - 1
local ~18 = fab(~17)
local ~19 = n + unpack(~18)
return ~19
end
end
local ~20 = fab(10000)
print(unpack(~20))
complie 61ms

[fab]
0       Push         1
1       Var          n
2       LessEqual
3       Define       ~16
4       Bind
5       Clear
6       Var          ~16
7       JumpNot      ~22:12
8       Var          n
9       Return
10      Clear
11      Jump         ~23:35
12      Label        ~22:12
13      Push         1
14      Var          n
15      Subtract
16      Define       ~17
17      Bind
18      Clear
19      Var          ~17
20      Var          fab
21      Call
22      Define       ~18
23      Bind
24      Clear
25      Var          ~18
26      Unpack
27      Var          n
28      Add
29      Define       ~19
30      Bind
31      Clear
32      Var          ~19
33      Return
34      Clear
35      Label        ~23:35
36      Clear

[test.lua]
0       Function     fab
1       Var          fab
2       Bind
3       Clear
4       Push         10000
5       Var          fab
6       Call
7       Define       ~20
8       Bind
9       Clear
10      Var          ~20
11      Unpack
12      Var          print
13      Call
14      Clear

[output]
5.00029E+07
execute 110ms
execute 0ms
